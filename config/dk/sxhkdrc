# focus next or previous window
super + {j,k}
	dkcmd win focus {next,prev} && cheese.sh

# view, send, or follow to a workspace (by number)
super + {_,shift + ,ctrl + }{1-9,0}
	dkcmd ws {view,send,follow} {1-9,10}

# move window, signed (+/-) for relative changes
# TODO: wtf is resize doing moving and resizing?
super + shift + {h,j,k,l}
	dkcmd win resize {x=-20,y=+20,y=-20,x=+20}

# resize window, signed (+/-) for relative changes
super + ctrl + {h,j,k,l}
	dkcmd win resize {w=-20,h=+20,h=-20,w=+20}

super + {Return,Tab}
	dkcmd win {swap,full}

# restart dk
super + shift + q
	dkcmd restart

super + shift + {w,t}
	dkcmd win {kill,float}

super + minus
	dkcmd ws last

# change number of windows in master or first stack
# super + {_,shift + }{comma,period}
# 	dkcmd set {master,stack} {+1,-1}
super + {comma,period}
	dkcmd set master {+1,-1}

super + shift + space
	~/.config/dk/dkrc

# super + b
# 	toggle.sh yambar

# close window, swap tiled window in/out of master, cycle tiled windows in place
# alt + {q,space,Tab}
# 	dkcmd win {kill,swap,cycle}

# toggle fullscreen and fake fullscreen (enable manipulating fullscreen window)
# {_,alt + }F11
# 	dkcmd win {full,fakefull}

# # toggle floating or sticky
# alt + shift + {space,s}
# 	dkcmd win {float,stick}

# view, send, or follow to a workspace (by number)
# alt + {_,shift + ,ctrl + }{1-9,0}
# 	dkcmd ws {view,send,follow} {1-9,10}

# view, send, or follow to the next, previous, last active,
# next non-empty, or prev non-empty workspace
# alt + {_,shift + ,ctrl + }{bracketleft,bracketright,BackSpace,Left,Right}
# 	dkcmd ws {view,send,follow} {prev,next,last,prevne,nextne}

# view, send, or follow to the next, previous, or last active monitor
super + {_,shift} + {w,e}
	dkcmd mon {view,send} {prev,next}

# change active workspace layout
# alt + {t,r,m,g,s,w,f,u}
# 	dkcmd set layout {tile,rtile,mono,grid,spiral,dwindle,none,tstack}

# next layout doens't exist.  this toggles tile/mono
super + space
  dk-next-layout
  # dkcmd set layout $(if dkcmd status type=ws num=1 | grep Ltile &>/dev/null ; then echo mono ; else echo tile ; fi	)

# change gap width
super + shift + {equal,minus}
	dkcmd set gap width {+5,-5}

# change border widths
super + {ctrl,alt} + {equal,minus}
	dkcmd set border {width,outer_width} {+1,-1}
