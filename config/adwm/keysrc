! ADWM default key configuration file

! Set the modifier key 'M'
Adwm*modkey:		W

! quit [command]	- quit and optionally execute a command
! restart [command]	- restart and optionally execute a command
! killclient		- close the selected window
! zoom			- swap selected window to/from master
/* Adwm*quit:		AC + p : End, AC + q, WS + q */
Adwm*restart:		M + r
Adwm*killclient:	MS + c
Adwm*zoom:		M + Return
/* Adwm*reload:		AC + p : Delete */
/* Adwm*initscr:		WS + i */

! move/resize [dx dy dw dh] - move by amount (pixels)
/* Adwm*moveright:		W + bracketright */
/* Adwm*moveleft:		W + bracketleft */
/* Adwm*moveup:		WS + bracketleft */
/* Adwm*movedown:		WS + bracketright */

/* Adwm*resizedecx:	AC + a : Left, AS + a, W + minus */
/* Adwm*resizedecy:	AC + a : Down, AS + s, WS + minus */
/* Adwm*resizeincx:	AC + a : Right, AS + d, W + equal */
/* Adwm*resizeincy:	AC + a : Up, AS + w, WS + equal */

/* Adwm*begmove:		A + F7, WS + m */
/* Adwm*begsize:		A + F8, AC + a : Return */

!Adwm*begmoveresize:	AC + a : Return
!Adwm*begmoveresize:	WS + m

! togglemonitor		- warp pointer to previous monitor
!Adwm*togglemonitor:	A + grave

! appendtag		- create another workspace
! rmlasttag		- remove last workspace
/* Adwm*appendtag:		AC + equal */
/* Adwm*rmlasttag:		AC + minus */

! flipview		- flip
! rotateview		- rotate areas clockwise
! unrotateview		- rotate areas counter-clockwise
Adwm*flipview:		WS + backslash
Adwm*rotateview:	A + y
Adwm*unrotateview:	AS + y

! flipzone		- flip
! rotatezone		- rotate masters or stacking clockwise
! unrotatezone		- rotate masters or stacking counter-clockwise
Adwm*rotatezone:	AC + y
Adwm*unrotatezone:	ACS + y

! flipwins		- flip
! rotatewins		- rotate windows thru positions clockwise
! unrotatewins		- rotate windows thru positions counter-clockwise
Adwm*rotatewins:	A + e
Adwm*unrotatewins:	AS + e

! raise			- raise selected window
! lower			- lower selected window
! raiselower		- raise if not top, lower if top
! raisetiled		- raise tiled above floating
/* Adwm*raise:		A + Up, AC + a : S + r, AC + a : r */
/* Adwm*lower:		A + Down, AC + a : S + l, AC + a : l */
/* Adwm*raiselower:	A + Home, A + Left, AC + a : u */
/* Adwm*raisetiled:	WS + r */

! mwfact		- set/dec/inc master width factor
! nmaster/ncolumns	- set/dec/inc number of masters/columns(rows)
! margin		- set/dec/inc margin between windows (pixels)
! border		- set/dec/inc window borders (pixels)
Adwm*decmwfact:		W + h
Adwm*incmwfact:		W + l
Adwm*decnmaster:	W + period
Adwm*incnmaster:	W + comma
/* Adwm*decncolumns:	WC + l, WS + period */
/* Adwm*incncolumns:	WC + h, WS + comma */
Adwm*decmargin:		WAS + m
Adwm*incmargin:		WA + m
Adwm*decborder:		WAS + b
Adwm*incborder:		WA + b

! floating		- set/unset/toggle floating window
! fill			- set/unset/toggle fills available area
! full			- set/unset/toggle fullscreen
! max			- set/unset/toggle maximize both
! maxv			- set/unset/toggle maximize vertical
! maxh			- set/unset/toggle maximize horizontal
! lhalf			- set/unset/toggle left-half
! rhalf			- set/unset/toggle right-half
! shade/shaded		- set/unset/toggle shaded
! hide/hidden		- set/unset/toggle hidden
! iconify/min		- set/unset/toggle minimized
! above			- set/unset/toggle above others
! below			- set/unset/toggle below others
! pager			- set/unset/toggle appears on pager
! taskbar		- set/unset/toggle apperas on taskbar
Adwm*togglefloating:	 W + t
/* Adwm*togglefill:	AC + a : g : g, CS + Down */
/* Adwm*togglefillh:	AC + a : g : h */
/* Adwm*togglefillv:	AC + a : g : v */
/* Adwm*togglefull:	A + F11, AC + a : f, W + f */
/* Adwm*togglemaxv:	AC + a : m : v, AS + F10, CS + Up */
/* Adwm*togglemaxh:	AC + a : m : h, CS + Right */
/* Adwm*togglemax:		A + F10, AC + a : m : m, CS + Left, W + m, WA + Up */
/* Adwm*unmax:		A + F5, WC + n */
/* Adwm*togglelhalf:	WA + Left */
/* Adwm*togglerhalf:	WA + Right */
/* Adwm*toggleshade:	A + F12, A + s, AC + a : s */
/* Adwm*hide:		AS + F12, AS + h */
/* Adwm*hideall:		AS + F11 */
/* Adwm*togglehidden:	WA + Down */
/* Adwm*iconify:		A + F9, AS + m, W + i, W + n, W + w */
/* Adwm*iconifyall:	AS + F9 */
/* Adwm*uniconify:		WS + w */
/* Adwm*toggleabove:	A + Right, AC + a : o */
/* Adwm*togglebelow:	AC + a : b */
/* Adwm*toggleselect:	W + z */
/* Adwm*togglesticky:	AC + a : a, AC + s */


! showing		- set/unset/toggle showing desktop mode
! struts		- set/unset/toggle showing struts (dock/panel)
! dectiled		- set/unset/toggle window decorations in tiled modes
/* Adwm*toggleshowing:	AC + d, W + d */
Adwm*togglestruts:	M + b
/* Adwm*togglestrutsall:	W + b */
/* Adwm*toggledectiled:	A + d */

! moveby		- move increment in direction
! moveto		- move to position in 3x3 grid
/* Adwm*movetoSW:		AC + KP_1, AC + c : z */
/* Adwm*movetoS:		AC + KP_2, AC + c : x, AC + c : b */
/* Adwm*movetoSE:		AC + KP_3, AC + c : c, AC + c : m */
/* Adwm*movetoW:		AC + KP_4, AC + c : a */
/* Adwm*movetoC:		AC + KP_5, AC + c : s, AC + c : h */
/* Adwm*movetoE:		AC + KP_6, AC + c : d, AC + c : l */
/* Adwm*movetoNW:		AC + KP_7, AC + c : q */
/* Adwm*movetoN:		AC + KP_8, AC + c : w, AC + c : y */
/* Adwm*movetoNE:		AC + KP_9, AC + c : e, AC + c : p */
/* ! snapto		- move toward grid position snapping to obstacles */
/* Adwm*snaptoSW:		ACS + KP_1 */
/* Adwm*snaptoS:		ACS + KP_2 */
/* Adwm*snaptoSE:		ACS + KP_3 */
/* Adwm*snaptoW:		ACS + KP_4 */
/* Adwm*smartplace:	ACS + KP_5 */
/* Adwm*snaptoE:		ACS + KP_6 */
/* Adwm*snaptoNW:		ACS + KP_7 */
/* Adwm*snaptoN:		ACS + KP_8 */
/* Adwm*snaptoNE:		ACS + KP_9 */
/* ! edgeto		- move to the corresponding edge */
/* Adwm*edgetoE:		AC + c : S + d, AC + c : S + l */
/* Adwm*edgetoN:		AC + c : S + w, AC + c : S + y */
/* Adwm*edgetoS:		AC + c : S + x, AC + c : S + b */
/* Adwm*edgetoW:		AC + c : S + a */
/* ! fill			- grow in the corresponding direction */
/* Adwm*fillleft:		W + Left */
/* Adwm*fillright:		W + Right */

! view			- switch to view and focus last
Adwm*view0:		 W + 1
Adwm*view1:		 W + 2
Adwm*view2:		 W + 3
Adwm*view3:		 W + 4
Adwm*view4:		 W + 5
Adwm*view5:		 W + 6
Adwm*view6:		 W + 7
Adwm*view7:		 W + 8
Adwm*view8:		 W + 9
Adwm*view9:		 W + 0
/* Adwm*view10:		A + bracketleft, C + F11 */
/* Adwm*view11:		A + bracketright, C + F12 */
/* Adwm*viewnext:		AC + Right, W + Up */
/* Adwm*viewprev:		AC + Left, W + Down */
Adwm*viewlast:		M + minus
/* Adwm*viewup:		AC + Up, AC + k, W + Page_Up */
/* Adwm*viewdown:		AC + Down, AC + j, W + Page_Down */
/* Adwm*viewleft:		AC + h, W + Home */
/* Adwm*viewright:		AC + l, W + End */
! focusview		- switch to view and focus first window
! toggleview		- toggle tag in current view
/* Adwm*toggleview0:	AC + 1, WC + 1 */
/* Adwm*toggleview1:	AC + 2, WC + 2 */
/* Adwm*toggleview2:	AC + 3, WC + 3 */
/* Adwm*toggleview3:	AC + 4, WC + 4 */
/* Adwm*toggleview4:	AC + 5, WC + 5 */
/* Adwm*toggleview5:	AC + 6, WC + 6 */
/* Adwm*toggleview6:	AC + 7, WC + 7 */
/* Adwm*toggleview7:	AC + 8, WC + 8 */
/* Adwm*toggleview8:	AC + 9, WC + 9 */
/* Adwm*toggleview9:	AC + 0, WC + 0 */
/* Adwm*toggleview10:	AC + bracketleft, WC + bracketleft */
/* Adwm*toggleview11:	AC + bracketright, WC + bracketright */
! tag			- add tag to a window
/* Adwm*tag0:		AS + 1 */
/* Adwm*tag1:		AS + 2 */
/* Adwm*tag2:		AS + 3 */
/* Adwm*tag3:		AS + 4 */
/* Adwm*tag4:		AS + 5 */
/* Adwm*tag5:		AS + 6 */
/* Adwm*tag6:		AS + 7 */
/* Adwm*tag7:		AS + 8 */
/* Adwm*tag8:		AS + 9 */
/* Adwm*tag9:		AS + 0 */
/* Adwm*tag10:		AS + bracketleft */
/* Adwm*tag11:		AS + bracketright */
! toggletag		- toggle tag on a window
/* Adwm*toggletag0:	ACS + 1, WCS + 1 */
/* Adwm*toggletag1:	ACS + 2, WCS + 2 */
/* Adwm*toggletag2:	ACS + 3, WCS + 3 */
/* Adwm*toggletag3:	ACS + 4, WCS + 4 */
/* Adwm*toggletag4:	ACS + 5, WCS + 5 */
/* Adwm*toggletag5:	ACS + 6, WCS + 6 */
/* Adwm*toggletag6:	ACS + 7, WCS + 7 */
/* Adwm*toggletag7:	ACS + 8, WCS + 8 */
/* Adwm*toggletag8:	ACS + 9, WCS + 9 */
/* Adwm*toggletag9:	ACS + 0, WCS + 0 */
/* Adwm*toggletag10:	ACS + bracketleft, WCS + bracketleft */
/* Adwm*toggletag11:	ACS + bracketright, WCS + bracketright */
! sendto		- send window to a view
Adwm*sendto0:		MS + 1
Adwm*sendto1:		MS + 2
Adwm*sendto2:		MS + 3
Adwm*sendto3:		MS + 4
Adwm*sendto4:		MS + 5
Adwm*sendto5:		MS + 6
Adwm*sendto6:		MS + 7
Adwm*sendto7:		MS + 8
Adwm*sendto8:		MS + 9
Adwm*sendto9:		MS + 0
! taketo		- take window to a view
/* Adwm*taketo0:		WC + F1 */
/* Adwm*taketo1:		WC + F2 */
/* Adwm*taketo2:		WC + F3 */
/* Adwm*taketo3:		WC + F4 */
/* Adwm*taketo4:		WC + F5 */
/* Adwm*taketo5:		WC + F6 */
/* Adwm*taketo6:		WC + F7 */
/* Adwm*taketo7:		WC + F8 */
/* Adwm*taketo8:		WC + F9 */
/* Adwm*taketo9:		WC + F10 */
/* Adwm*taketo10:		WC + F11 */
/* Adwm*taketo11:		WC + F12 */
/* Adwm*taketonext:	ACS + Right, W + a, WC + Right */
/* Adwm*taketoprev:	ACS + Left, WC + Left, WS + Down */
/* Adwm*taketoup:		ACS + Up, WC + Up, WS + Page_Up */
/* Adwm*taketodown:	ACS + Down, WC + Down, WS + Page_Down */
/* Adwm*taketoleft:	WS + Home */
/* Adwm*taketoright:	WS + End */
! screen		- warp focus to a monitor
/* Adwm*screen0:		W + KP_1 */
/* Adwm*screen1:		W + KP_2 */
/* Adwm*screen2:		W + KP_3 */
/* Adwm*screen3:		W + KP_4 */
/* Adwm*screen4:		W + KP_5 */
/* Adwm*screen5:		W + KP_6 */
/* Adwm*screen6:		W + KP_7 */
/* Adwm*screen7:		W + KP_8 */
/* Adwm*screen8:		W + KP_9 */
Adwm*screennext:	Mod + w
Adwm*screenprev:	Mod + e
! scrto			- send window to a monitor
Adwm*scrto0:		WS + KP_1
Adwm*scrto1:		WS + KP_2
Adwm*scrto2:		WS + KP_3
Adwm*scrto3:		WS + KP_4
Adwm*scrto4:		WS + KP_5
Adwm*scrto5:		WS + KP_6
Adwm*scrto6:		WS + KP_7
Adwm*scrto7:		WS + KP_8
Adwm*scrto8:		WS + KP_9
Adwm*scrtonext:		AS + period, W + o
Adwm*scrtoprev:		AS + comma

! focus			- select client tiled order
Adwm*focusnext:		M + k
Adwm*focusprev:		M + j
Adwm*focusurgent:	M + u
! client		- select client list order
! stack			- select client stacking order
! group			- select client same class tiled order
/* Adwm*groupnext:		A + grave, A + F6, W + grave */
/* Adwm*groupprev:		AS + grave, AS + F6, WS + grave */
! tab			- select client tab order
! panel			- select panel tiled order
/* Adwm*panelnext:		AC + Escape */
/* Adwm*panelprev:		ACS + Escape */
! dock			- select dockapp tiled order
/* Adwm*docknext:		AC + Tab */
/* Adwm*dockprev:		ACS + Tab */
! swap			- swap with other client tiled order
Adwm*swapnext:		MS + j
Adwm*swapprev:		MS + k

! placement		- window placement of view
/* Adwm*colplacement:	CWA + s */
/* Adwm*rowplacement:	CWA + r */
/* Adwm*minplacement:	CWA + m */
/* Adwm*undplacement:	CWA + u */
/* Adwm*casplacement:	CWA + c */
/* Adwm*rndplacement:	CWA + x */

! layout		- layout of monitor
Adwm*setlayoutm:	M + Tab
/* Adwm*setlayoutf:	A + f, AS + F4 */
/* Adwm*setlayouti:	A + i, AS + F7 */
/* Adwm*setlayoutt:	A + r, AS + F3 */
/* Adwm*setlayoutb:	A + w */
Adwm*setlayoutl:	MS + Tab
/* Adwm*setlayoutu:	A + u, AS + F2 */
/* Adwm*setlayoutg:	A + g */

/* layout* not implemented yet */
/* Adwm*layoutnext: MS+ Tab */
/* Adwm*layoutprev:	WS + Tab */
Adwm*arrange:		AS + F5
Adwm*arrangeicons:	AS + F8
Adwm*togglefocus:	W + g

! spawn			- spawn a command
/* Adwm*spawn0:		AC + t = xdg-launch roxterm */
/* Adwm*spawn1:		AC + w = xdg-launch firefox */
/* Adwm*spawn2:		AC + f = xdg-launch pcmanfm */
/* Adwm*spawn3:		AC + r = xde-run */
/* Adwm*spawn4:		AC + v = xdg-launch gvim */
/* Adwm*spawn5:		AC + n = xdg-launch uxterm */
/* Adwm*spawn6:		AC + m = xde-menu -P */
/* Adwm*spawn7:		A + space = xde-winmenu -w active -W center */
/* Adwm*spawn8:		A + F1 = xdg-launch uxterm */
/* Adwm*spawn9:		A + F2 = xde-run */
/* Adwm*spawn10:		A + Print = scrot -s */
/* Adwm*spawn11:		A + x = xdg-launch uxterm */
/* Adwm*spawn12:		AC + Delete = xde-logout */
/* Adwm*spawn13:		AC + Return = xdg-launch uxterm */
/* Adwm*spawn14:		AC + e : c = xde-run */
/* Adwm*spawn15:		AC + e : e = xdg-launch uxterm */
/* Adwm*spawn16:		AC + e : l = xdg-launch xde-xlock */
/* Adwm*spawn17:		AC + e : s = scrot -s */
/* Adwm*spawn18:		AC + p : d = xde-run */
/* Adwm*spawn19:		AC + x = xdg-launch uxterm */
/* Adwm*spawn20:		AS + Return = xdg-launch uxterm */
/* Adwm*spawn21:		C + Escape = xde-menu -P */
/* Adwm*spawn22:		F11 = xde-winlist */
/* Adwm*spawn23:		F12 = xde-menu -P */
/* Adwm*spawn24:		S + Escape = xde-winmenu -w active -W center */
/* Adwm*spawn25:		W + e = xdg-launch pcmanfm */
/* Adwm*spawn26:		W + p = xde-menu -P */
/* Adwm*spawn27:		W + r = xde-run */
/* Adwm*spawn28:		W + s = scrot */
/* Adwm*spawn29:		W + slash = xde-findws */
/* Adwm*spawn30:		WS + Delete = xdg-launch xde-xlock */
/* Adwm*spawn31:		WS + Return = xdg-launch uxterm */
/* Adwm*spawn32:		WS + s = scrot -s */
/* Adwm*spawn33:		WS + slash = xde-namews */
/* Adwm*spawn34:		XF86MonBrightnessUp = xbrightness +4096 */
/* Adwm*spawn35:		XF86MonBrightnessDown = xbrightness -4096 */
/* Adwm*spawn36:		C + XF86MonBrightnessUp = xbacklight -inc 5 */
/* Adwm*spawn37:		C + XF86MonBrightnessDown = xbacklight -dec 5 */
/* Adwm*spawn38:		XF86AudioRaiseVolume = amixer sset Master\\,0 5%+ */
/* Adwm*spawn39:		XF86AudioLowerVolume = amixer sset Master\\,0 5%- */
/* Adwm*spawn40:		XF86AudioMute = amixer sset Master\\,0 toggle */
/* Adwm*spawn41:		CWA + Left = xrandr -o left */
/* Adwm*spawn42:		CWA + Right = xrandr -o right */
/* Adwm*spawn43:		CWA + Down = xrandr -o inverted */
/* Adwm*spawn44:		CWA + Up = xrandr -o normal */
!Adwm*spawn45:		XF86Display
!Adwm*spawn46:		XF86Sleep

! rule			- rules for window classes
!Adwm*rule0:		Firefox.* web 0 1
!Adwm*rule4:		Mplayer.* NULL 1 1
!Adwm*rule5:		Gimp.* gfx 1 1

! button2		- key binding for mouse button 2
Adwm*button2:		W + v

! command		- command for button press on root window
/* Adwm*command:		xde-menu -P -b 3 */
/* Adwm*command2:		xde-wkspmenu -p -b 2 */
! Adwm*command3:	xde-winlist -p -b 1 --hidden
/* Adwm*menucommand:	xde-winmenu -p -b 1 */


! vim: set ft=xdefaults:
