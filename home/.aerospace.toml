# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
# after-startup-command = []

# requires borders: brew tap FelixKratz/formulae && brew install borders
after-startup-command = [
  'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0'
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
on-focus-changed = ['move-mouse window-lazy-center'] # Mouse lazily follows any focus (window or workspace)

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodness#disable-hide-app
automatically-unhide-macos-hidden-apps = false

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 0
inner.vertical =   0
outer.left =       1
outer.bottom =     1
outer.top =        1
outer.right =      1

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# HyperKey maps caps to alt-cmd-ctrl
# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-cmd-ctrl-slash = 'layout tiles horizontal vertical'
alt-cmd-ctrl-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-cmd-ctrl-h = 'focus left'
alt-cmd-ctrl-j = 'focus down'
alt-cmd-ctrl-k = 'focus up'
alt-cmd-ctrl-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-cmd-ctrl-shift-h = 'move left'
alt-cmd-ctrl-shift-j = 'move down'
alt-cmd-ctrl-shift-k = 'move up'
alt-cmd-ctrl-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-cmd-ctrl-shift-minus = 'resize smart -50'
alt-cmd-ctrl-shift-equal = 'resize smart +50'


# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
# shift version apparently needs to be above shiftless variant.
alt-cmd-ctrl-shift-1 = 'move-node-to-workspace 1 --focus-follows-window'
alt-cmd-ctrl-shift-2 = 'move-node-to-workspace 2 --focus-follows-window'
alt-cmd-ctrl-shift-3 = 'move-node-to-workspace 3 --focus-follows-window'
alt-cmd-ctrl-shift-4 = 'move-node-to-workspace 4 --focus-follows-window'
alt-cmd-ctrl-shift-5 = 'move-node-to-workspace 5 --focus-follows-window'
alt-cmd-ctrl-shift-6 = 'move-node-to-workspace 6 --focus-follows-window'
alt-cmd-ctrl-shift-7 = 'move-node-to-workspace 7 --focus-follows-window'
alt-cmd-ctrl-shift-8 = 'move-node-to-workspace 8 --focus-follows-window'
alt-cmd-ctrl-shift-9 = 'move-node-to-workspace 9 --focus-follows-window'
alt-cmd-ctrl-shift-0 = 'move-node-to-workspace 0 --focus-follows-window'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-cmd-ctrl-1 = 'summon-workspace 1'
alt-cmd-ctrl-2 = 'summon-workspace 2'
alt-cmd-ctrl-3 = 'summon-workspace 3'
alt-cmd-ctrl-4 = 'summon-workspace 4'
alt-cmd-ctrl-5 = 'summon-workspace 5'
alt-cmd-ctrl-6 = 'summon-workspace 6'
alt-cmd-ctrl-7 = 'summon-workspace 7'
alt-cmd-ctrl-8 = 'summon-workspace 8'
alt-cmd-ctrl-9 = 'summon-workspace 9'
alt-cmd-ctrl-0 = 'summon-workspace 0'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
# alt-cmd-ctrl-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-cmd-ctrl-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
# alt-cmd-ctrl-shift-semicolon = 'mode service'

###### there is a broken keybinding somewhere blocking some commands from working!
alt-cmd-ctrl-w = 'focus-monitor --wrap-around up'
alt-cmd-ctrl-e = 'focus-monitor --wrap-around down'

# this service binding does not close and ends up consuming my custom additions



# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# [mode.service.binding]
# esc = ['reload-config', 'mode main']
# r = ['flatten-workspace-tree', 'mode main'] # reset layout
# f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
# backspace = ['close-all-windows-but-current', 'mode main']

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

# alt-cmd-ctrl-shift-h = ['join-with left', 'mode main']
# alt-cmd-ctrl-shift-j = ['join-with down', 'mode main']
# alt-cmd-ctrl-shift-k = ['join-with up', 'mode main']
# alt-cmd-ctrl-shift-l = ['join-with right', 'mode main']



# custom wm commands
alt-cmd-ctrl-shift-q = 'reload-config' #, 'mode main']

# alt-cmd-ctrl-w = 'focus-monitor --wrap-around up'
alt-cmd-ctrl-shift-w = 'move-node-to-monitor up --wrap-around'

# launchers
# alt-cmd-ctrl-enter = 'exec-and-forget open -n /Volumes/Macintosh\ HD/Applications/Alacritty.app'




# alt-z = 'exec-and-forget open -n /System/Applications/Utilities/Terminal.app'
# alt-y = 'exec-and-forget open -n -a Terminal.app'
# alt-cmd-ctrl-enter = 'exec-and-forget open -a iTerm.app'
# alt-enter = '''exec-and-forget osascript -e '
alt-cmd-ctrl-enter = '''exec-and-forget osascript -e '
tell application "iTerm2"
      create window with default profile
end tell'
'''


# TODO
# cmd-shift-f = 'macos-native-fullscreen'
alt-cmd-ctrl-f = 'fullscreen'
# alt-g = 'split horizontal'
# alt-v = 'split vertical'

[[on-window-detected]]
if.app-id = 'org.mozilla.firefox'
run = ['move-node-to-workspace 1']

[[on-window-detected]]
if.app-id = 'com.spotify.client'
run = ['move-node-to-workspace 2']

[[on-window-detected]]
if.app-id = 'com.tinyspeck.com/slackmacgap'
run = ['move-node-to-workspace 5']

[[on-window-detected]]
if.app-name-regex-substring = 'zoom'
# if.app-id = 'us.zoom.xos'
run = ['move-node-to-workspace 0']
